version: "3.8"

services:
  db:
    image: postgres:15
    container_name: books-db
    restart: always
    env_file: .env.docker
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db-init/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5433:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 10

  migrate:
    image: migrate/migrate
    container_name: migrate-service
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./migrations:/migrations
    env_file: .env.docker
    entrypoint:
      [
        "migrate",
        "-path", "/migrations",
        "-database",
        "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable",
        "up"
      ]
    networks:
      - app-network
    restart: "on-failure"

  app:
    build:
      context: .
    container_name: books-app
    ports:
      - "4000:4000"
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    env_file: .env.docker
    environment:
      PORT: "4000"
      ENV: "development"
      DB_DSN: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable"
      JWT_SECRET: ${JWT_SECRET}
      GOOGLE_OAUTH_CLIENT_ID: ${GOOGLE_OAUTH_CLIENT_ID}
      GOOGLE_OAUTH_CLIENT_SECRET: ${GOOGLE_OAUTH_CLIENT_SECRET}
      GOOGLE_OAUTH_REDIRECT_URL: ${GOOGLE_OAUTH_REDIRECT_URL}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SMTP_SENDER: ${SMTP_SENDER}
    networks:
      - app-network

volumes:
  pgdata:

networks:
  app-network: