{
    "swagger": "2.0",
    "info": {
        "description": "This is book store API built using Go and httprouter",
        "title": "Book Store API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:4000",
    "basePath": "/",
    "paths": {
        "/v1/auth/activate": {
            "put": {
                "description": "Activate for an account",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Activate registered account",
                "parameters": [
                    {
                        "description": "User activation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.ActivateUserRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User activated success",
                        "schema": {
                            "$ref": "#/definitions/main.RegisterUserResponse"
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "schema": {
                            "$ref": "#/definitions/main.ValidationErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/auth/google": {
            "get": {
                "description": "Login to an account using google oauth",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Log in with google",
                "responses": {
                    "200": {
                        "description": "Return Redirect URL to continue Login with google",
                        "schema": {
                            "$ref": "#/definitions/main.GoogleLoginResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/auth/google/callback": {
            "get": {
                "description": "Callback for google successful login",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Callback for Google Login",
                "responses": {
                    "200": {
                        "description": "Login success",
                        "schema": {
                            "$ref": "#/definitions/main.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request Error",
                        "schema": {
                            "$ref": "#/definitions/main.GeneralErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/auth/login": {
            "post": {
                "description": "Login to an account",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Log in to an account",
                "parameters": [
                    {
                        "description": "Login data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.LoginRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login success",
                        "schema": {
                            "$ref": "#/definitions/main.LoginResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid Credential Error",
                        "schema": {
                            "$ref": "#/definitions/main.GeneralErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "schema": {
                            "$ref": "#/definitions/main.ValidationErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/auth/me": {
            "get": {
                "description": "Get current logged in user information",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Get me",
                "responses": {
                    "200": {
                        "description": "Get Current Loggined User successfully",
                        "schema": {
                            "$ref": "#/definitions/main.GetUserResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthenticated Error",
                        "schema": {
                            "$ref": "#/definitions/main.GeneralErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/auth/refresh": {
            "post": {
                "description": "Refresh Previous Access Token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh access token",
                "responses": {
                    "200": {
                        "description": "Return Redirect URL to continue Login with google",
                        "schema": {
                            "$ref": "#/definitions/main.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request Error",
                        "schema": {
                            "$ref": "#/definitions/main.GeneralErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/auth/register": {
            "post": {
                "description": "Signup for an account",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Register account",
                "parameters": [
                    {
                        "description": "User registration data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.RegisterUserRequestBody"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "User signed up success",
                        "schema": {
                            "$ref": "#/definitions/main.RegisterUserResponse"
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "schema": {
                            "$ref": "#/definitions/main.ValidationErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/books": {
            "get": {
                "description": "Get All Created Books",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Get All Books",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page (default: 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by field, e.g. 'name' or '-createdAt' for descending",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Books successfully",
                        "schema": {
                            "$ref": "#/definitions/main.GetBooksResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create Books",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Create Books",
                "parameters": [
                    {
                        "description": "Book data to create",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.CreateBookBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Book creation success",
                        "schema": {
                            "$ref": "#/definitions/main.BookResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request Error",
                        "schema": {
                            "$ref": "#/definitions/main.GeneralErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthenticated Error",
                        "schema": {
                            "$ref": "#/definitions/main.GeneralErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "schema": {
                            "$ref": "#/definitions/main.ValidationErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/books/{id}": {
            "get": {
                "description": "Get Specific Book By ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Get Book By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User activated success",
                        "schema": {
                            "$ref": "#/definitions/main.BookResponse"
                        }
                    },
                    "404": {
                        "description": "Book not found",
                        "schema": {
                            "$ref": "#/definitions/main.GeneralErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Book",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Delete Book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted book successfully",
                        "schema": {
                            "$ref": "#/definitions/main.DeleteSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request Error",
                        "schema": {
                            "$ref": "#/definitions/main.GeneralErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthenticated Error",
                        "schema": {
                            "$ref": "#/definitions/main.GeneralErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Permission Error",
                        "schema": {
                            "$ref": "#/definitions/main.GeneralErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update Book",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Update Book",
                "parameters": [
                    {
                        "description": "Book data to update",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.UpdateBookBody"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated book successfully",
                        "schema": {
                            "$ref": "#/definitions/main.BookResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request Error",
                        "schema": {
                            "$ref": "#/definitions/main.GeneralErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthenticated Error",
                        "schema": {
                            "$ref": "#/definitions/main.GeneralErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Permission Error",
                        "schema": {
                            "$ref": "#/definitions/main.GeneralErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "schema": {
                            "$ref": "#/definitions/main.ValidationErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/healthcheck": {
            "get": {
                "description": "Returns an object that include environment and status of the API",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Healthcheck"
                ],
                "summary": "Health Check The API",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.HealthCheckResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/users/{id}": {
            "get": {
                "description": "Get specific user by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Specific User successfully",
                        "schema": {
                            "$ref": "#/definitions/main.GetUserResponse"
                        }
                    },
                    "400": {
                        "description": "BadRequest Error",
                        "schema": {
                            "$ref": "#/definitions/main.GeneralErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "schema": {
                            "$ref": "#/definitions/main.ValidationErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.InternalServerErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.ActivateUserRequestBody": {
            "type": "object",
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "main.BookResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/main.BookResponseDTO"
                }
            }
        },
        "main.BookResponseDTO": {
            "type": "object",
            "properties": {
                "coverPicture": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isPublished": {
                    "type": "boolean"
                },
                "publishedAt": {
                    "type": "string"
                },
                "string": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "main.CreateBookBody": {
            "type": "object",
            "properties": {
                "coverPicture": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "main.DeleteSuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "main.GeneralErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "main.GetBooksResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.BookResponseDTO"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/main.MetadataDto"
                }
            }
        },
        "main.GetUserResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/main.UserResponseDTO"
                }
            }
        },
        "main.GoogleLoginResponse": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                }
            }
        },
        "main.HealthCheckResponse": {
            "type": "object",
            "properties": {
                "environment": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "main.InternalServerErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "main.LoginRequestBody": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "main.LoginResponse": {
            "type": "object",
            "properties": {
                "acessToken": {
                    "type": "string"
                }
            }
        },
        "main.MetadataDto": {
            "type": "object",
            "properties": {
                "currentPage": {
                    "type": "integer"
                },
                "firstPage": {
                    "type": "integer"
                },
                "lastPage": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "totalRecords": {
                    "type": "integer"
                }
            }
        },
        "main.RegisterUserRequestBody": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "main.RegisterUserResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/main.UserResponseDTO"
                }
            }
        },
        "main.UpdateBookBody": {
            "type": "object",
            "properties": {
                "coverPicture": {
                    "type": "string"
                },
                "isPublished": {
                    "type": "boolean"
                },
                "publishedAt": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "main.UserResponseDTO": {
            "type": "object",
            "properties": {
                "activated": {
                    "type": "boolean"
                },
                "authProvider": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "main.ValidationErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}